
//import java.util.Date;
import java.util.List;
import javax.swing.*;

/**
 *
 * @author saraholopainen
 */
public class TaskManager extends javax.swing.JFrame {
    private static ToDoList tdl;

    /**
     * Creates new form CreateTaskGUI
     */
    public TaskManager() {
        initComponents();
        tdl = new ToDoList();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        MyPanels = new javax.swing.JTabbedPane();
        DailyPanel = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        DailyTaskList = new javax.swing.JList<>();
        GenerateDailyButton = new javax.swing.JButton();
        DailyCompTaskButton = new javax.swing.JButton();
        DailyGenCompConf = new javax.swing.JLabel();
        WeeklyPanel = new javax.swing.JPanel();
        GenerateWeeklyButton = new javax.swing.JButton();
        ScrollPane1 = new javax.swing.JScrollPane();
        WeeklyTaskList = new javax.swing.JList<>();
        WeeklyCompTaskButton = new javax.swing.JButton();
        WeeklyGenCompConf = new javax.swing.JLabel();
        MonthlyPanel = new javax.swing.JPanel();
        GenerateMonthlyButton = new javax.swing.JButton();
        MonthlyCompTaskButton = new javax.swing.JButton();
        MonthlyGenCompConf = new javax.swing.JLabel();
        ScrollPane3 = new javax.swing.JScrollPane();
        MonthlyTaskList = new javax.swing.JList<>();
        AddTaskPanel = new javax.swing.JPanel();
        TaskNameLabel = new javax.swing.JLabel();
        AddTaskButton = new javax.swing.JButton();
        TaskPriorityLabel = new javax.swing.JLabel();
        DueDateLabel = new javax.swing.JLabel();
        TaskNameInput = new javax.swing.JTextField();
        PrioritySlider = new javax.swing.JSlider();
        CategoryLabel = new javax.swing.JLabel();
        CategoryComboBox = new javax.swing.JComboBox<>();
        AddConfirmation = new javax.swing.JLabel();
        DueDateComboBox = new javax.swing.JComboBox<>();
        HomeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(254, 253, 225));

        jPanel3.setBackground(new java.awt.Color(177, 211, 200));
        jPanel3.setToolTipText("");

        MyPanels.setBackground(new java.awt.Color(177, 211, 200));
        MyPanels.setForeground(new java.awt.Color(112, 90, 55));
        MyPanels.setFont(new java.awt.Font("DIN Alternate", 1, 16)); // NOI18N

        DailyPanel.setBackground(new java.awt.Color(177, 211, 200));

        DailyTaskList.setBackground(new java.awt.Color(177, 211, 200));
        DailyTaskList.setFont(new java.awt.Font("DIN Alternate", 0, 14)); // NOI18N
        DailyTaskList.setForeground(new java.awt.Color(242, 242, 242));
        ScrollPane.setViewportView(DailyTaskList);

        GenerateDailyButton.setBackground(new java.awt.Color(177, 211, 200));
        GenerateDailyButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        GenerateDailyButton.setForeground(new java.awt.Color(112, 90, 55));
        GenerateDailyButton.setText("Generate");
        GenerateDailyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateDailyButtonActionPerformed(evt);
            }
        });

        DailyCompTaskButton.setBackground(new java.awt.Color(177, 211, 200));
        DailyCompTaskButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        DailyCompTaskButton.setForeground(new java.awt.Color(112, 90, 55));
        DailyCompTaskButton.setText("Complete Task");
        DailyCompTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DailyCompTaskButtonActionPerformed(evt);
            }
        });

        DailyGenCompConf.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        DailyGenCompConf.setForeground(new java.awt.Color(112, 90, 55));
        DailyGenCompConf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DailyGenCompConf.setText("Welcome! Press generate after adding some tasks to get started.");

        javax.swing.GroupLayout DailyPanelLayout = new javax.swing.GroupLayout(DailyPanel);
        DailyPanel.setLayout(DailyPanelLayout);
        DailyPanelLayout.setHorizontalGroup(
            DailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DailyPanelLayout.createSequentialGroup()
                .addContainerGap(178, Short.MAX_VALUE)
                .addComponent(GenerateDailyButton)
                .addGap(146, 146, 146)
                .addComponent(DailyCompTaskButton)
                .addGap(187, 187, 187))
            .addComponent(ScrollPane)
            .addComponent(DailyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        DailyPanelLayout.setVerticalGroup(
            DailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DailyPanelLayout.createSequentialGroup()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DailyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GenerateDailyButton)
                    .addComponent(DailyCompTaskButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DailyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        MyPanels.addTab("Daily", DailyPanel);

        WeeklyPanel.setBackground(new java.awt.Color(177, 211, 200));

        GenerateWeeklyButton.setBackground(new java.awt.Color(177, 211, 200));
        GenerateWeeklyButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        GenerateWeeklyButton.setForeground(new java.awt.Color(112, 90, 55));
        GenerateWeeklyButton.setText("Generate");
        GenerateWeeklyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateWeeklyButtonActionPerformed(evt);
            }
        });

        WeeklyTaskList.setBackground(new java.awt.Color(177, 211, 200));
        WeeklyTaskList.setFont(new java.awt.Font("DIN Alternate", 0, 14)); // NOI18N
        WeeklyTaskList.setForeground(new java.awt.Color(242, 242, 242));
        ScrollPane1.setViewportView(WeeklyTaskList);

        WeeklyCompTaskButton.setBackground(new java.awt.Color(177, 211, 200));
        WeeklyCompTaskButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        WeeklyCompTaskButton.setForeground(new java.awt.Color(112, 90, 55));
        WeeklyCompTaskButton.setText("Complete Task");
        WeeklyCompTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WeeklyCompTaskButtonActionPerformed(evt);
            }
        });

        WeeklyGenCompConf.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        WeeklyGenCompConf.setForeground(new java.awt.Color(112, 90, 55));
        WeeklyGenCompConf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WeeklyGenCompConf.setText("Welcome! Press generate after adding some tasks to get started.");

        javax.swing.GroupLayout WeeklyPanelLayout = new javax.swing.GroupLayout(WeeklyPanel);
        WeeklyPanel.setLayout(WeeklyPanelLayout);
        WeeklyPanelLayout.setHorizontalGroup(
            WeeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WeeklyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateWeeklyButton)
                .addGap(145, 145, 145)
                .addComponent(WeeklyCompTaskButton)
                .addGap(186, 186, 186))
            .addComponent(ScrollPane1)
            .addComponent(WeeklyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
        );
        WeeklyPanelLayout.setVerticalGroup(
            WeeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WeeklyPanelLayout.createSequentialGroup()
                .addComponent(ScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(WeeklyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerateWeeklyButton)
                    .addComponent(WeeklyCompTaskButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(WeeklyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        MyPanels.addTab("Weekly", WeeklyPanel);

        MonthlyPanel.setBackground(new java.awt.Color(177, 211, 200));

        GenerateMonthlyButton.setBackground(new java.awt.Color(177, 211, 200));
        GenerateMonthlyButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        GenerateMonthlyButton.setForeground(new java.awt.Color(112, 90, 55));
        GenerateMonthlyButton.setText("Generate");
        GenerateMonthlyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateMonthlyButtonActionPerformed(evt);
            }
        });

        MonthlyCompTaskButton.setBackground(new java.awt.Color(177, 211, 200));
        MonthlyCompTaskButton.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        MonthlyCompTaskButton.setForeground(new java.awt.Color(112, 90, 55));
        MonthlyCompTaskButton.setText("Complete Task");
        MonthlyCompTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthlyCompTaskButtonActionPerformed(evt);
            }
        });

        MonthlyGenCompConf.setFont(new java.awt.Font("DIN Alternate", 0, 12)); // NOI18N
        MonthlyGenCompConf.setForeground(new java.awt.Color(112, 90, 55));
        MonthlyGenCompConf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MonthlyGenCompConf.setText("Welcome! Press generate after adding some tasks to get started.");

        MonthlyTaskList.setBackground(new java.awt.Color(177, 211, 200));
        MonthlyTaskList.setFont(new java.awt.Font("DIN Alternate", 0, 14)); // NOI18N
        MonthlyTaskList.setForeground(new java.awt.Color(242, 242, 242));
        ScrollPane3.setViewportView(MonthlyTaskList);

        javax.swing.GroupLayout MonthlyPanelLayout = new javax.swing.GroupLayout(MonthlyPanel);
        MonthlyPanel.setLayout(MonthlyPanelLayout);
        MonthlyPanelLayout.setHorizontalGroup(
            MonthlyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MonthlyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GenerateMonthlyButton)
                .addGap(145, 145, 145)
                .addComponent(MonthlyCompTaskButton)
                .addGap(183, 183, 183))
            .addComponent(MonthlyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MonthlyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane3)
                .addContainerGap())
        );
        MonthlyPanelLayout.setVerticalGroup(
            MonthlyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MonthlyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MonthlyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerateMonthlyButton)
                    .addComponent(MonthlyCompTaskButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MonthlyGenCompConf, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        MyPanels.addTab("Monthly", MonthlyPanel);

        AddTaskPanel.setBackground(new java.awt.Color(177, 211, 200));

        TaskNameLabel.setFont(new java.awt.Font("DIN Alternate", 1, 24)); // NOI18N
        TaskNameLabel.setForeground(new java.awt.Color(112, 90, 55));
        TaskNameLabel.setText("Task Name");

        AddTaskButton.setBackground(new java.awt.Color(177, 211, 200));
        AddTaskButton.setFont(new java.awt.Font("DIN Alternate", 1, 12)); // NOI18N
        AddTaskButton.setForeground(new java.awt.Color(112, 90, 55));
        AddTaskButton.setText("Add Task");
        AddTaskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTaskButtonActionPerformed(evt);
            }
        });

        TaskPriorityLabel.setFont(new java.awt.Font("DIN Alternate", 1, 24)); // NOI18N
        TaskPriorityLabel.setForeground(new java.awt.Color(112, 90, 55));
        TaskPriorityLabel.setText("Priority");

        DueDateLabel.setFont(new java.awt.Font("DIN Alternate", 1, 24)); // NOI18N
        DueDateLabel.setForeground(new java.awt.Color(112, 90, 55));
        DueDateLabel.setText("Due Date");

        PrioritySlider.setBackground(new java.awt.Color(255, 255, 255));
        PrioritySlider.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PrioritySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PrioritySliderStateChanged(evt);
            }
        });

        CategoryLabel.setFont(new java.awt.Font("DIN Alternate", 1, 24)); // NOI18N
        CategoryLabel.setForeground(new java.awt.Color(112, 90, 55));
        CategoryLabel.setText("Category");

        CategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Work", "School", "Home", "Fitness", "Finance", "Social", "Hobbies", "Other" }));
        CategoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryComboBoxActionPerformed(evt);
            }
        });

        AddConfirmation.setFont(new java.awt.Font("DIN Alternate", 1, 12)); // NOI18N
        AddConfirmation.setForeground(new java.awt.Color(255, 255, 255));

        DueDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Today", "This Week", "This Month" }));

        javax.swing.GroupLayout AddTaskPanelLayout = new javax.swing.GroupLayout(AddTaskPanel);
        AddTaskPanel.setLayout(AddTaskPanelLayout);
        AddTaskPanelLayout.setHorizontalGroup(
            AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTaskPanelLayout.createSequentialGroup()
                .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddTaskPanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TaskNameLabel)
                            .addComponent(TaskPriorityLabel)
                            .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(DueDateLabel)
                                .addComponent(CategoryLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TaskNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrioritySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddTaskPanelLayout.createSequentialGroup()
                                .addComponent(CategoryComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(256, 256, 256))
                            .addComponent(DueDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddTaskPanelLayout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddTaskButton, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(AddConfirmation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        AddTaskPanelLayout.setVerticalGroup(
            AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddTaskPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TaskNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TaskNameLabel))
                .addGap(18, 18, 18)
                .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrioritySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TaskPriorityLabel))
                .addGap(18, 18, 18)
                .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DueDateLabel)
                    .addComponent(DueDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(AddTaskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoryLabel)
                    .addComponent(CategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AddTaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AddConfirmation)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        MyPanels.addTab("Add New Task", AddTaskPanel);

        HomeButton.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        HomeButton.setText("🏡");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(MyPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HomeButton)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MyPanels, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomeButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MyPanels.getAccessibleContext().setAccessibleName("Daily");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        // TODO add your handling code here:
        LoginScreen loginscreen = new LoginScreen();
        loginscreen.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HomeButtonActionPerformed

    private void CategoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryComboBoxActionPerformed

    private void PrioritySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PrioritySliderStateChanged
        // Get the value of the priority slider
        String priorityString = "Priority";
        int priorityValue = PrioritySlider.getValue() / 20;

        // Convert the priority value to String if needed
        switch (priorityValue) {
            case 0:
            priorityString = "Casual";
            break;
            case 1:
            priorityString = "Low";
            break;
            case 2:
            priorityString = "Normal";
            break;
            case 3:
            priorityString = "Medium";
            break;
            case 4:
            priorityString = "High";
            break;
            case 5:
            priorityString = "Urgent!";
            default:
            System.out.println("Priority");
            break;
        }

        // Set the text of the TaskPriorityLabel to display the priority value
        TaskPriorityLabel.setText(priorityString);
    }//GEN-LAST:event_PrioritySliderStateChanged

    private void AddTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTaskButtonActionPerformed
        // Get inputs from GUI elements
        int dueDate = 0;
        String taskName = TaskNameInput.getText();
        String dDS = (String) DueDateComboBox.getSelectedItem();
        switch (dDS) {
            case "Today" -> dueDate = 1;
            case "This Week" -> dueDate = 2;
            case "This Month" -> dueDate = 3;
        }
        int priority = PrioritySlider.getValue() / 20;
        //System.out.println(dDS + "  " + dueDate);
        String category = (String) CategoryComboBox.getSelectedItem();

        // Check if task name is not empty
        if (taskName.isEmpty()) {
            // Provide feedback to the user and exit the method
            AddConfirmation.setText("Please enter a task name.");
            return;
        }

        // Create a new task with the inputs
        Task newTask = new Task(taskName, dueDate, priority, category);

        // Add the new task to the to-do list
        tdl.addTask(newTask);

        // Print some debug info to confirm task addition
        System.out.println(tdl.getTasksByPriority());

        // Provide feedback to the user
        AddConfirmation.setText(taskName + " added to your to-do list.");
    }//GEN-LAST:event_AddTaskButtonActionPerformed

    private void MonthlyCompTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthlyCompTaskButtonActionPerformed
        // TODO add your handling code here:
        // Get the selected index from the JList
        int selectedIndex = MonthlyTaskList.getSelectedIndex();

        // Check if any item is selected
        if (selectedIndex != -1) {
            //Get the selected task name
            String selectedTaskName = MonthlyTaskList.getSelectedValue();

            // Remove the task from the to-do list by task name
            tdl.removeTaskByName(selectedTaskName);

            // Re-generate daily tasks list to reflect the changes
            GenerateMonthlyButtonActionPerformed(evt);

            // Provide feedback to the user
            MonthlyGenCompConf.setText("Nice work! " + selectedTaskName + " completed and removed from your to-do list.");
        } else {
            // Provide feedback to the user if no task is selected
            MonthlyGenCompConf.setText("Please select a task to complete.");
        }
    }//GEN-LAST:event_MonthlyCompTaskButtonActionPerformed

    private void GenerateMonthlyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateMonthlyButtonActionPerformed
        // TODO add your handling code here:
        List<Task> monthlyTasks = tdl.getMonthlyTasks();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        MonthlyTaskList.setModel(listModel);
        for (Task task : monthlyTasks) {
            listModel.addElement(task.getTaskName());
        }
        MonthlyTaskList.setVisible(true);
    }//GEN-LAST:event_GenerateMonthlyButtonActionPerformed

    private void WeeklyCompTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WeeklyCompTaskButtonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // Get the selected index from the JList
        int selectedIndex = WeeklyTaskList.getSelectedIndex();

        // Check if any item is selected
        if (selectedIndex != -1) {
            //Get the selected task name
            String selectedTaskName = WeeklyTaskList.getSelectedValue();

            // Remove the task from the to-do list by task name
            tdl.removeTaskByName(selectedTaskName);

            // Re-generate daily tasks list to reflect the changes
            GenerateWeeklyButtonActionPerformed(evt);

            // Provide feedback to the user
            WeeklyGenCompConf.setText("Nice work! " + selectedTaskName + " completed and removed from your to-do list.");
        } else {
            // Provide feedback to the user if no task is selected
            WeeklyGenCompConf.setText("Please select a task to complete.");
        }
    }//GEN-LAST:event_WeeklyCompTaskButtonActionPerformed

    private void GenerateWeeklyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateWeeklyButtonActionPerformed
        // TODO add your handling code here:
        List<Task> weeklyTasks = tdl.getWeeklyTasks();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        WeeklyTaskList.setModel(listModel);
        for (Task task : weeklyTasks) {
            listModel.addElement(task.getTaskName());
        }
        WeeklyTaskList.setVisible(true);
    }//GEN-LAST:event_GenerateWeeklyButtonActionPerformed

    private void DailyCompTaskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DailyCompTaskButtonActionPerformed
        // TODO add your handling code here:
        // Get the selected index from the JList
        int selectedIndex = DailyTaskList.getSelectedIndex();

        // Check if any item is selected
        if (selectedIndex != -1) {
            //Get the selected task name
            String selectedTaskName = DailyTaskList.getSelectedValue();

            // Remove the task from the to-do list by task name
            tdl.removeTaskByName(selectedTaskName);

            // Re-generate daily tasks list to reflect the changes
            GenerateDailyButtonActionPerformed(evt);

            // Provide feedback to the user
            DailyGenCompConf.setText("Nice work! " + selectedTaskName + " completed and removed from your to-do list.");
        } else {
            // Provide feedback to the user if no task is selected
            DailyGenCompConf.setText("Please select a task to complete.");
        }
    }//GEN-LAST:event_DailyCompTaskButtonActionPerformed

    private void GenerateDailyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateDailyButtonActionPerformed
        List<Task> dailyTasks = tdl.getDailyTasks();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        DailyTaskList.setModel(listModel);
        for (Task task : dailyTasks) {
            listModel.addElement(task.getTaskName());
        }
        DailyTaskList.setVisible(true);
    }//GEN-LAST:event_GenerateDailyButtonActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TaskManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TaskManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddConfirmation;
    private javax.swing.JButton AddTaskButton;
    private javax.swing.JPanel AddTaskPanel;
    private javax.swing.JComboBox<String> CategoryComboBox;
    private javax.swing.JLabel CategoryLabel;
    private javax.swing.JButton DailyCompTaskButton;
    private javax.swing.JLabel DailyGenCompConf;
    private javax.swing.JPanel DailyPanel;
    private javax.swing.JList<String> DailyTaskList;
    private javax.swing.JComboBox<String> DueDateComboBox;
    private javax.swing.JLabel DueDateLabel;
    private javax.swing.JButton GenerateDailyButton;
    private javax.swing.JButton GenerateMonthlyButton;
    private javax.swing.JButton GenerateWeeklyButton;
    private javax.swing.JButton HomeButton;
    private javax.swing.JButton MonthlyCompTaskButton;
    private javax.swing.JLabel MonthlyGenCompConf;
    private javax.swing.JPanel MonthlyPanel;
    private javax.swing.JList<String> MonthlyTaskList;
    private javax.swing.JTabbedPane MyPanels;
    private javax.swing.JSlider PrioritySlider;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JScrollPane ScrollPane1;
    private javax.swing.JScrollPane ScrollPane3;
    private javax.swing.JTextField TaskNameInput;
    private javax.swing.JLabel TaskNameLabel;
    private javax.swing.JLabel TaskPriorityLabel;
    private javax.swing.JButton WeeklyCompTaskButton;
    private javax.swing.JLabel WeeklyGenCompConf;
    private javax.swing.JPanel WeeklyPanel;
    private javax.swing.JList<String> WeeklyTaskList;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
